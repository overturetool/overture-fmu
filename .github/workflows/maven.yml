# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - master
  pull_request:

env:
  JAVA_VERSION: 11.0.3
  SERVER_ID: snapshots
  PYTHON_VERSION: '3.9.7'
  MAVEN_VERSION: 3.8.1
  WINDOWS_VERSION: 'windows-2019'
  UBUNTU_VERSION: 'ubuntu-latest'
  MACOS_VERSION: 'macos-latest'


jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2019, macos-latest]

    steps:

      - name: Set up Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: ${{ ENV.MAVEN_VERSION }}

      - uses: actions/checkout@v2

      - name: Maven Build
        run: mvn "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" "-Dhttp.keepAlive=false" "-Dmaven.wagon.http.pool=false" "-Dmaven.wagon.httpconnectionManager.ttlSeconds=120" -B package --file pom.xml -DskipTests -fae

      - name: Maven Test
        run: mvn "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" "-Dhttp.keepAlive=false" "-Dmaven.wagon.http.pool=false" "-Dmaven.wagon.httpconnectionManager.ttlSeconds=120"  test


#      - name: upload test reports win
#        uses: actions/upload-artifact@v2
#        if: ${{ failure() && matrix.os == env.WINDOWS_VERSION}}
#
#        with:
#          name: surfire-win
#          path: |
#            **/target/surefire-reports/*
#            **/target/FullSpecCppTest/spec.mabl
#            **/target/FullSpecCppTest/co-sim.cxx
#          retention-days: 1




#  deploy:
#    if: github.event_name == 'push' && (github.ref == 'refs/heads/development' )
#
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Environment variables
#        run: echo ${{ env.SERVER_ID }}
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ env.JAVA_VERSION }}
#          server-id: ${{ env.SERVER_ID }}
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
#      - name: Deploy
#        run: mvn "-Dhttp.keepAlive=false" "-Dmaven.wagon.http.pool=false" "-Dmaven.wagon.httpconnectionManager.ttlSeconds=120" -B -Prelease-sources-javadoc deploy -DskipTests -DskipITs -fae
#        env:
#          MAVEN_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
